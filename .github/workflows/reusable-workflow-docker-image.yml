name: Reusable workflow - build docker image

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      docker-dir:
        required: true
        type: string
      platform:
        required: true
        type: string

jobs:
  build-container-image:
    runs-on: self-hosted

    env:
      IMAGE_NAME: ${{ inputs.image-name }}
      IMAGE_TAG: "${{ github.run_number }}"
      REGISTRY: ${{ vars.REGISTRY }}
      DOCKER_DIR: ${{ inputs.docker-dir }}
      PLATFORM: ${{ inputs.platform }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Input Validation
        run: |
          if [[ "$PLATFORM" != "amd64" ]] && \
             [[ "$PLATFORM" != "arm64" ]]; then
            echo "Invalid environment: $PLATFORM"
            exit 1
          fi

      - name: Build Container Image
        run: |
          echo "Building image: $REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
          podman build --platform linux/$PLATFORM -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG $DOCKER_DIR

      # - name: Push Container Image
      #   run: |
      #     echo "Pushing image: $REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
      #     podman push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG      

      - name: List local images
        run: |
          podman pull docker.io/library/ubuntu:22.04
          podman image ls

      - name: Check ubuntu image with Trivy
        run: |  
          trivy image docker.io/library/ubuntu:22.04

      # - name: Check image with Trivy
      #   run: |
      #     mkdir build-artifacts
      #     echo "=======> Print image for trivy scan:"
      #     echo "$REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
      #     echo ""=======> Print available images:"
      #     podman image ls
      #     echo ""=======> Scan image with trivy:"
      #     trivy image $REGISTRY/$IMAGE_NAME:$IMAGE_TAG >> build-artifacts/vuln-scan.txt
      #     cat build-artifacts/vuln-scan.txt
      #     trivy image --format spdx ubuntu:rolling >> build-artifacts/sbom-spdx.txt
      #     trivy image --format cyclonedx ubuntu:rolling >> build-artifacts/sbom-cyclonedx.txt

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: build-artifacts
      #     path: build-artifacts/*

      # - name: Tag and push Docker image as latest
      #   # if: github.ref == 'refs/heads/main' # TODO: uncomment once we are done with development
      #   run: |
      #     podman tag $REGISTRY/$IMAGE_NAME:$IMAGE_TAG $REGISTRY/$IMAGE_NAME:latest
      #     podman push $REGISTRY/$IMAGE_NAME:latest


